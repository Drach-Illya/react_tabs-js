{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","currentTab","i","cn","href","onClick","title","content","App","useState","setSelectedTabId","openTab","ReactDOM","render","document","getElementById"],"mappings":"8NAEaA,EAAO,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAIpCC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIJ,IAAkBI,EAAIC,OAAON,EAAK,GAEvE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACC,EAAYC,GAAb,OACR,oBACEH,UAAWI,IAAG,CAAE,YAAaR,EAAYG,KAAOG,EAAWH,KAC3D,UAAQ,MAFV,SAKE,mBACEM,KAAI,WAAMH,EAAWH,IACrB,UAAQ,UACRO,QAAS,WACHV,EAAYG,KAAOG,EAAWH,IAChCJ,EAAcO,IALpB,SASGA,EAAWK,SAXTL,EAAWH,WAkBxB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYY,cC5BRf,EAAO,CAClB,CAAEM,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,gBAG7BC,EAAM,WAGjB,MAA0CC,mBAASjB,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBiB,EAAtB,KACMf,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIJ,IAAkBI,EAAIC,OAAON,EAAK,GAEvE,OACE,sBAAKO,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBJ,EAAYW,SAGlC,cAAC,EAAD,CACEd,KAAMA,EACNC,cAAeA,EACfC,cAAe,SAACiB,GACdD,EAAiBC,EAAQb,WC1BnCc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c89e1fe0.chunk.js","sourcesContent":["import cn from 'classnames';\n\nexport const Tabs = ({ tabs, selectedTabId, onTabSelected }) => {\n  // got rid of checkers, now just assigning the active tab via OR construction\n  // also tabs[0] at the end is mandatory to set a default in case find returns undefined\n  // Which is necessary as one of the tests checks for\n  const selectedTab = tabs.find(tab => selectedTabId === tab.id) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((currentTab, i) => (\n            <li // added classnames as requested\n              className={cn({ 'is-active': selectedTab.id === currentTab.id })}\n              data-cy=\"Tab\"\n              key={currentTab.id}\n            >\n              <a\n                href={`#${currentTab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (selectedTab.id !== currentTab.id) {\n                    onTabSelected(currentTab);\n                  }\n                }}\n              >\n                {currentTab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  // the function was redundant, got rid of it and just using the selectedTabId\n  // also has to be called selectedTabId due to README\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const selectedTab = tabs.find(tab => selectedTabId === tab.id) || tabs[0];\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={(openTab) => {\n          setSelectedTabId(openTab.id);\n        }}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}