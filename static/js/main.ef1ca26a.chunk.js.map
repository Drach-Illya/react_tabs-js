{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","checkedTabId","undefined","find","searchedTab","id","activeTab","className","map","currentTab","i","href","onClick","title","content","App","useState","tabSelector","setTabSelector","listOfTabs","tab","setOpenedTab","openTab","ReactDOM","render","document","getElementById"],"mappings":"6MAAaA,EAAO,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cACtCC,EAAeF,OAE+CG,IAA9DJ,EAAKK,MAAK,SAAAC,GAAW,OAAIA,EAAYC,KAAOJ,OAC9CA,EAAeH,EAAK,GAAGO,IAGzB,IAAMC,EAAYR,EAAKK,MAAK,SAAAC,GAAW,OAAIA,EAAYC,KAAOJ,KAE9D,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKM,UAAU,gBAAf,SACE,6BACGT,EAAKU,KAAI,SAACC,EAAYC,GAAb,OACR,oBACEH,UAAYN,IAAiBQ,EAAWJ,GAAM,YAAc,GAC5D,UAAQ,MAFV,SAKE,mBACEM,KAAI,WAAMF,EAAWJ,IACrB,UAAQ,UACRO,QAAS,WACHX,IAAiBQ,EAAWJ,IAC9BL,EAAcS,IALpB,SASGA,EAAWI,SAXTJ,EAAWJ,WAkBxB,qBAAKE,UAAU,QAAQ,UAAQ,aAA/B,SACGD,EAAUQ,cC7BNhB,EAAO,CAClB,CAAEO,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,gBAOnC,IAAMC,EAAM,WACjB,MAAsCC,mBAASlB,EAAK,GAAGO,IAAvD,mBAAOY,EAAP,KAAoBC,EAApB,KACMnB,EANR,SAAsBoB,EAAtB,GAAoD,IAAhBF,EAAe,EAAfA,YAClC,OAAOE,EAAWhB,MAAK,SAAAiB,GAAG,OAAIA,EAAIf,KAAOY,KAAaZ,GAKhCgB,CAAavB,EAAM,CAAEmB,gBACrCX,EAAYR,EAAKK,MAAK,SAAAiB,GAAG,OAAIA,EAAIf,KAAON,KAE9C,OACE,sBAAKQ,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBD,EAAUO,SAGhC,cAAC,EAAD,CACEf,KAAMA,EACNC,cAAeA,EACfC,cAAe,SAACsB,GACdJ,EAAeI,EAAQjB,WC7BjCkB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ef1ca26a.chunk.js","sourcesContent":["export const Tabs = ({ tabs, selectedTabId, onTabSelected }) => {\n  let checkedTabId = selectedTabId;\n\n  if (tabs.find(searchedTab => searchedTab.id === checkedTabId) === undefined) {\n    checkedTabId = tabs[0].id;\n  }\n\n  const activeTab = tabs.find(searchedTab => searchedTab.id === checkedTabId);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((currentTab, i) => (\n            <li\n              className={(checkedTabId === currentTab.id) ? 'is-active' : ''}\n              data-cy=\"Tab\"\n              key={currentTab.id}\n            >\n              <a\n                href={`#${currentTab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (checkedTabId !== currentTab.id) {\n                    onTabSelected(currentTab);\n                  }\n                }}\n              >\n                {currentTab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {activeTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nfunction setOpenedTab(listOfTabs, { tabSelector }) {\n  return listOfTabs.find(tab => tab.id === tabSelector).id;\n}\n\nexport const App = () => {\n  const [tabSelector, setTabSelector] = useState(tabs[0].id);\n  const selectedTabId = setOpenedTab(tabs, { tabSelector });\n  const activeTab = tabs.find(tab => tab.id === selectedTabId);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${activeTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={(openTab) => {\n          setTabSelector(openTab.id);\n        }}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}